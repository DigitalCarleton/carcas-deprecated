:not(:defined) > * {
  display: none;
}

body {
  margin: 0;
  padding: 0;
  width: 100vw;
  height: 100vh;
}

model-viewer {
  width: 100%;
  height: 90%;
  background-color: #ffffff;
}

.progress-bar {
  display: block;
  width: 33%;
  height: 10%;
  max-height: 2%;
  position: absolute;
  left: 50%;
  top: 50%;
  transform: translate3d(-50%, -50%, 0);
  border-radius: 25px;
  box-shadow:
    0px 3px 10px 3px rgba(0, 0, 0, 0.5),
    0px 0px 5px 1px rgba(0, 0, 0, 0.6);
  border: 1px solid rgba(255, 255, 255, 0.9);
  background-color: rgba(0, 0, 0, 0.5);
}

.progress-bar.hide {
  visibility: hidden;
  transition: visibility 0.3s;
}

.update-bar {
  background-color: rgba(255, 255, 255, 0.9);
  width: 0%;
  height: 100%;
  border-radius: 25px;
  float: left;
  transition: width 0.3s;
}

#ar-button {
  background-image: url(ar_icon.png);
  background-repeat: no-repeat;
  background-size: 20px 20px;
  background-position: 12px 50%;
  background-color: #fff;
  position: absolute;
  left: 50%;
  transform: translateX(-50%);
  white-space: nowrap;
  top: 16px;
  padding: 0px 16px 0px 40px;
  font-family: Roboto Regular, Helvetica Neue, sans-serif;
  font-size: 14px;
  color:#4285f4;
  height: 36px;
  line-height: 36px;
  border-radius: 18px;
  border: 1px solid #DADCE0;
}

#ar-button:active {
  background-color: #e8eaed;
}

#ar-button:focus {
  outline: none;
}

#ar-button:focus-visible {
  outline: 1px solid #4285f4;
}

@keyframes circle {
  from {
    transform: translateX(-50%) rotate(0deg) translateX(50px) rotate(0deg);
  }
  to {
    transform: translateX(-50%) rotate(360deg) translateX(50px) rotate(-360deg);
  }
}

@keyframes elongate {
  from {
    transform: translateX(100px);
  }
  to {
    transform: translateX(-100px);
  }
}

model-viewer > #ar-prompt {
  position: absolute;
  left: 50%;
  bottom: 60px;
  animation: elongate 2s infinite ease-in-out alternate;
  display: none;
}

model-viewer[ar-status="session-started"] > #ar-prompt {
  display: block;
}

model-viewer > #ar-prompt > img {
  animation: circle 4s linear infinite;
}

#controls {
  /* position: absolute;
    top: 0;
    left: 0; */
  max-width: unset;
  transform: unset;
  pointer-events: auto;
  display: inline-block;
}

#controlContainer {
  width: 100%;
  position: absolute;
  text-align: center;
}

@media (min-width: 768px) {
  #controlContainer {
    top: 8px;
    left: 0;
  }
}

@media (max-width: 767px) {
  #controlContainer {
    bottom: 8px;
    left: 0;
  }
}

.dot {
  display: block;
  width: 12px;
  height: 12px;
  border-radius: 50%;
  border: none;
  box-sizing: border-box;
  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.25);
  background: #fff;
  pointer-events: none;
  --min-hotspot-opacity: 0;
}

.dim {
  background: #fff;
  border-radius: 4px;
  border: none;
  box-sizing: border-box;
  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.25);
  color: rgba(0, 0, 0, 0.8);
  display: inline-block;
  font-family:
    Futura,
    Helvetica Neue,
    sans-serif;
  font-size: 18px;
  font-weight: 700;
  max-width: 128px;
  overflow-wrap: break-word;
  padding: 0.5em 1em;
  /* position: absolute; */
  width: max-content;
  height: max-content;
  transform: translate3d(-50%, -50%, 0);
  pointer-events: none;
  --min-hotspot-opacity: 0;
}

.dimensionLineContainer {
  pointer-events: none;
  display: none;
  /* display: block; */
}

.dimensionLineContainer.loaded {
  display: block;
}

.dimensionLine {
  stroke: #16a5e6;
  stroke-width: 2;
  stroke-dasharray: 2;
}

.show {
  --min-hotspot-opacity: 1;
}

.hide {
  display: none;
}
/* This keeps child nodes hidden while the element loads */
/* :not(:defined) > * {
  display: none;
} */
